# $Id$
# 
#---       `funlab' 0.0.0 (c) 1978 by Marcin 'Amok' Konarski      ---
#
#	Makefile - this file is integral part of `funlab' project.
#
#	i.  You may not $(MAKE) any changes in Copyright information.
#	ii. You must attach Copyright information to any part of every copy
#	    of this software.
#
#Copyright:
#
# You are free to use this program as is, you can redistribute binary
# package freely but:
#  1. You can not use any part of sources of this software.
#  2. You can not redistribute any part of sources of this software.
#  3. No reverse engineering is allowed.
#  4. If you want redistribute binary package you can not demand any fees
#     for this software.
#     You can not even demand cost of the carrier (CD for example).
#  5. You can not include it to any commercial enterprise (for example 
#     as a free add-on to payed software or payed newspaper).
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. Use it at your own risk.

export DIR_ROOT	?= $(CURDIR)
VERSION				= 0
SUBVERSION		= 0
EXTRAVERSION	= 0
include $(DIR_ROOT)/_aux/mk/0_paths.mk
LIBS					= SDL @GUI_LIBS@ pthread hdata dbwrapper tools hconsole hcore
TARGET				= funlab
SRC_TARGET		= src
EXEC_NAME			= 1exec
TARGETS				= TARGET
CTAGS	= @CTAGS@
GITID = @GITID@

include $(DIR_ROOT)/_aux/inc-helper-pre.mk

CWARNING_FLAGS:=$(filter-out -Wredundant-decls,$(CWARNING_FLAGS))
CWARNING_FLAGS:=$(filter-out -Werror,$(CWARNING_FLAGS)) # kurwa gtkmm ma problem z TimeVal::as_double()
CXXWARNING_FLAGS:=$(filter-out -Weffc++,$(CXXWARNING_FLAGS))
CWARNING_FLAGS								+= @PEDANTIC_ERRORS@ @EXTRA_WARNINGS@
COMPILER_PRIME_FLAGS					+= @DEFS@
LINKER_PRIME_FLAGS +=	@SPECIAL_LINKER_FLAGS@
COMPILER_@GUI_TYPE@_FLAGS			= @GUI_COMPILER_FLAGS@
LINKER_@GUI_TYPE@_FLAGS				= @GUI_LINKER_FLAGS@

include $(DIR_ROOT)/_aux/mk/7_flags-post.mk
CXXFLAGS			+= $(COMPILER_@GUI_TYPE@_FLAGS)
LINKER_FLAGS	+= $(LINKER_@GUI_TYPE@_FLAGS)
include $(DIR_ROOT)/_aux/mk/8_int-libs.mk
LIBS := $(subst -l-l, -l, $(LIBS))
include $(DIR_ROOT)/_aux/mk/9_func.mk
include $(DIR_ROOT)/_aux/mk/a_prepare-target.mk
include $(DIR_ROOT)/_aux/mk/b_common-targets.mk
include $(DIR_ROOT)/_aux/mk/c_filenames.mk
include $(DIR_ROOT)/_aux/mk/e_target-default.mk
include $(DIR_ROOT)/_aux/mk/f_target-tags.mk

ifeq ($(CURDIR),$(DIR_BUILD))
-include $(OBJS:.$(OS)=.$(DS))
endif

